
/////////////// Inheritance and costrictor

class Base2{
    int x;

    public int getX() {
        return x;
    }

    public void setX(int x) {
        this.x = x;
    }
    Base2(){
        System.out.println("I am base class constructor");
    }
    Base2(int a){
        System.out.println("I am base class overloaded constructor with a value of "+a);
    }
}

class  Derived2 extends Base2{
    int y;

Derived2(){
    System.out.println("I am a derived class constructor");

}
    Derived2(int a,int b){
        super(5);
        System.out.println("I am a derived class constructor with value "+b);
    }
    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }
}


class childOfDerived extends Derived{

    childOfDerived(){
        System.out.println("I am child of derivedchild class");
    }

    childOfDerived(int a,int b,int c){
     super(a,b);
        System.out.println("I am child of derivedchild class with value "+c);
    }

}
public class classpracticeQuestion {

    public static void main(String[] args) {
childOfDerived cd = new childOfDerived(5,6,2);



    }
}
